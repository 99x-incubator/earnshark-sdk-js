{
  "_args": [
    [
      "http-post",
      "/Users/Jehan/Desktop/earnshark-npm"
    ]
  ],
  "_from": "http-post@latest",
  "_id": "http-post@0.1.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/http-post",
  "_npmUser": {
    "email": "sam@emberlabs.org",
    "name": "samt"
  },
  "_npmVersion": "1.1.61",
  "_phantomChildren": {},
  "_requested": {
    "name": "http-post",
    "raw": "http-post",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/http-post/-/http-post-0.1.1.tgz",
  "_shasum": "b9dc73ca772932157be50fd469c76fa18e83c945",
  "_shrinkwrap": null,
  "_spec": "http-post",
  "_where": "/Users/Jehan/Desktop/earnshark-npm",
  "author": {
    "email": "sam@emberlabs.org",
    "name": "Sam Thompson"
  },
  "bugs": {
    "url": "https://github.com/samt/http-post/issues"
  },
  "contributors": [
    {
      "name": "Matthew Jones"
    }
  ],
  "dependencies": {},
  "description": "Shortcut method similar to http.get() for HTTP POST requests with support for data and files",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "b9dc73ca772932157be50fd469c76fa18e83c945",
    "tarball": "https://registry.npmjs.org/http-post/-/http-post-0.1.1.tgz"
  },
  "homepage": "https://github.com/samt/http-post#readme",
  "keywords": [
    "http",
    "post",
    "upload",
    "file",
    "url"
  ],
  "main": "index",
  "maintainers": [
    {
      "email": "sam@emberlabs.org",
      "name": "samt"
    }
  ],
  "name": "http-post",
  "optionalDependencies": {},
  "readme": "# http-post\r\n\r\nThis utility extends the functionality of the 'http' library in stock node.js.\r\nIt returns a post request function in a very similar way to node's [http.get()](http://nodejs.org/api/http.html#http_http_get_options_callback).\r\n\r\nIn the same style as `http.get()`, this function calls `req.end()` automatically\r\n\r\n## Installing\r\n\r\n\tnpm install http-post\r\n\r\n## Usage\r\n\r\n\thttp-post(options, data[, files[, callback]])\r\n\r\nor\r\n\r\n\thttp-post(options, data[, callback])\r\n\r\n### options\r\n\r\nOptions are the same as the ones for [http.request()](http://nodejs.org/api/http.html#http_http_request_options_callback)\r\nexcept `method` will always be forced to `POST`. Note that `options` can be\r\nreplaced with the full URI of the request similar to `http.get` allowing for\r\neven greater flexiblity in your post requests.\r\n\r\n### data\r\n\r\nData should be key/value pairs of form data. This does not handle file data,\r\nsee the `files` option below for more information on uploading files.\r\n\r\n\tvar data = {\r\n\t\tname: \"Sam\",\r\n\t\temail: \"sam@emberlabs.org\",\r\n\t\tgender: \"m\",\r\n\t\tlanguages: [\r\n\t\t\t\"C\",\r\n\t\t\t\"C++\",\r\n\t\t\t\"Java\",\r\n\t\t\t\"JavaScript\",\r\n\t\t\t\"PHP\",\r\n\t\t\t\"Python\"\r\n\t\t]\r\n\t}\r\n\r\nPass it an empty array if you do not need to send any form data.\r\n\r\n### files\r\n\r\nThis param is another JavaScript object that can contain many files to be posted\r\n\r\n\tvar files = [\r\n\t\t{\r\n\t\t\tparam: \"img\",\r\n\t\t\tpath: \"./assets/mycoolimage.png\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tparam: \"somefile\",\r\n\t\t\tname: \"mydata.txt\",\r\n\t\t\tpath: \"C:\\\\Users\\\\Sam\\\\Documents\\\\asdf.txt\"\r\n\t\t}\r\n\t]\r\n\r\nYou may chose to specify an optional `name` in your array. It will override the\r\nfile name as it exists in the filesystem and name it the name you specified for\r\nthe request.\r\n\r\n### callback\r\n\r\nCallback is the same from [http.request()](http://nodejs.org/api/http.html#http_http_request_options_callback).\r\nIt accepts an instance of [http.ClientResponce](http://nodejs.org/api/http.html#http_http_clientresponse)\r\nthat has been created during the time of the request.\r\n\r\n## Return\r\n\r\nReturns an instance of [http.ClientRequest](http://nodejs.org/api/http.html#http_class_http_clientrequest)\r\n\r\n## Examples\r\n\r\nSetting up\r\n\r\n\tvar http = require('http');\r\n\thttp.post = require('http-post');\r\n\r\nPosting data\r\n\r\n\thttp.post('http://localhost/postscript.php', { name: 'Sam', email: 'sam@emberlabs.org' }, function(res){\r\n\t\tresponse.setEncoding('utf8');\r\n\t\tres.on('data', function(chunk) {\r\n\t\t\tconsole.log(chunk);\r\n\t\t});\r\n\t});\r\n\r\nPosting a file\r\n\r\n\tvar files = {\r\n\t\t{\r\n\t\t\tparam: \"file\",\r\n\t\t\tpath: \"./assets/img/something.png\"\r\n\t\t}\r\n\t};\r\n\t\r\n\thttp.post('http://localhost/postscript.php', [], files, function(res){\r\n\t\t//...\r\n\t});\r\n\r\nPosting multiple files\r\n\r\n\tvar files = {\r\n\t\t{\r\n\t\t\tparam: \"file\",\r\n\t\t\tpath: \"./assets/img/something.png\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tparam: \"junk\",\r\n\t\t\tpath: \"/home/sam/hello.txt\"\r\n\t\t}\r\n\t};\r\n\t\r\n\thttp.post('http://localhost/postscript.php', [], files, function(res){\r\n\t\t// ...\r\n\t});\r\n\r\nPosting data and files\r\n\r\n\tvar data = {\r\n\t\tname: 'Sam',\r\n\t\tdrink: 'coffee'\r\n\t};\r\n\t\r\n\tvar files = {\r\n\t\t{\r\n\t\t\tparam: \"file\",\r\n\t\t\tpath: \"./assets/img/something.png\"\r\n\t\t},\r\n\t\t{\r\n\t\t\tparam: \"junk\",\r\n\t\t\tpath: \"/home/sam/hello.txt\"\r\n\t\t}\r\n\t};\r\n\t\r\n\thttp.post('http://localhost/postscript.php', data, files, function(res){\r\n\t\t// ...\r\n\t});\r\n\r\n## License\r\n\r\n[The MIT License](http://opensource.org/licenses/mit-license.php)\r\n",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/samt/http-post.git"
  },
  "version": "0.1.1"
}
